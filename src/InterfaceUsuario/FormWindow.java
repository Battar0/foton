/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceUsuario;

import regrasNegocio.*;
import Excecoes.*;
import FDF.fdfFile;
import FDF.fdfWriter;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import java.time.Instant;
import java.util.Calendar;

/**
 *
 * @author Windows 10
 */
public class FormWindow extends javax.swing.JFrame {
    Formulario formulario;
    MainWindow mwd;
    /**
     * Creates new form NewJFrame
     */
    
    // Recebe o MainWindow para poder adcionar / remover formularios da lista de formularios
    public FormWindow(MainWindow mwindow) 
    {
        initComponents();
        
        formulario = new Formulario(nome_formulario.getText(), descricao.getText(), nome_autor.getText());
        this.setLocationRelativeTo(null);
        
        mwd = mwindow;
        mwd.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome_formulario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nome_autor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taPerguntas = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bSalvar = new javax.swing.JButton();
        bSair = new javax.swing.JButton();
        bDeletarPergunta = new javax.swing.JButton();
        bModificarPergunta = new javax.swing.JButton();
        bNovaPergunta = new javax.swing.JButton();
        perguntas = new javax.swing.JComboBox<>();
        bDescartar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descricao = new javax.swing.JTextArea();
        dataInicio = new javax.swing.JFormattedTextField();
        dataTermino = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fóton - Criar Formulário");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        nome_formulario.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nome_formularioInputMethodTextChanged(evt);
            }
        });
        nome_formulario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nome_formularioActionPerformed(evt);
            }
        });
        nome_formulario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nome_formularioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nome_formularioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nome_formularioKeyTyped(evt);
            }
        });

        jLabel2.setText("Nome do Formulário:");

        nome_autor.setToolTipText("");
        nome_autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nome_autorActionPerformed(evt);
            }
        });
        nome_autor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nome_autorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nome_autorKeyTyped(evt);
            }
        });

        jLabel3.setText("Nome do Autor:");

        jLabel4.setText("Data de início: ");

        jLabel5.setText("Data de Término:");

        taPerguntas.setEditable(false);
        taPerguntas.setColumns(20);
        taPerguntas.setRows(5);
        taPerguntas.setEnabled(false);
        jScrollPane1.setViewportView(taPerguntas);

        jLabel6.setText("Perguntas: ");

        bSalvar.setText("Salvar");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        bSair.setText("Sair");
        bSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSairActionPerformed(evt);
            }
        });

        bDeletarPergunta.setText("Deletar Pergunta");
        bDeletarPergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeletarPerguntaActionPerformed(evt);
            }
        });

        bModificarPergunta.setText("Modificar Pergunta");
        bModificarPergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarPerguntaActionPerformed(evt);
            }
        });

        bNovaPergunta.setText("Nova Pergunta");
        bNovaPergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNovaPerguntaActionPerformed(evt);
            }
        });

        bDescartar.setText("Descartar");
        bDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDescartarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(perguntas, 0, 274, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(bDescartar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(bNovaPergunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bModificarPergunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bDeletarPergunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(bSair, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                            .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(perguntas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(bDescartar)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bNovaPergunta)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bModificarPergunta)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bDeletarPergunta)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bSair)
                        .addComponent(bSalvar))
                    .addContainerGap()))
        );

        jLabel1.setText("Descrição:");

        descricao.setColumns(20);
        descricao.setRows(5);
        descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descricaoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descricaoKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(descricao);

        dataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        dataInicio.setToolTipText("Exemplo: 20/05/2018");
        dataInicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataInicioFocusLost(evt);
            }
        });
        dataInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataInicioActionPerformed(evt);
            }
        });
        dataInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dataInicioKeyReleased(evt);
            }
        });

        dataTermino.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        dataTermino.setToolTipText("Exemplo: 20/05/2018");
        dataTermino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataTerminoFocusLost(evt);
            }
        });
        dataTermino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dataTerminoKeyReleased(evt);
            }
        });

        jLabel7.setText("dd/mm/yyyy");

        jLabel8.setText("dd/mm/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nome_autor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nome_formulario)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dataTermino, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dataInicio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nome_formulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nome_autor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nome_autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nome_autorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nome_autorActionPerformed

    private void nome_formularioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nome_formularioActionPerformed
    }//GEN-LAST:event_nome_formularioActionPerformed

    private void nome_formularioInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nome_formularioInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_nome_formularioInputMethodTextChanged

    private void nome_formularioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_formularioKeyTyped
        
    }//GEN-LAST:event_nome_formularioKeyTyped

    private void bSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSairActionPerformed
        mwd.setVisible(true);
        dispose();
    }//GEN-LAST:event_bSairActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        try 
        {
            // adcionar data na verificação
            if (nome_autor.getText().isEmpty() || 
                nome_formulario.getText().isEmpty() || 
                descricao.getText().isEmpty() || 
                dataInicio.getText().isEmpty() || 
                dataTermino.getText().isEmpty())
            {
                throw new DescricaoObrigatoriaNaoInformadaException();
            } 
            else 
            {   
                // Salva os nomes do formulario e autor
                formulario.setNome(nome_formulario.getText());
                formulario.setNomeAutor(nome_autor.getText());
                
                // Salva a descrição do formulario
                formulario.setDescricao(descricao.getText());
                        
                // Salva as datas de início e de término na memória
                formulario.setDataInicio(dataInicio.getText());
                formulario.setDataTermino(dataTermino.getText());
                
                // Adciona o formulario a lista de formularios
                mwd.lista.add(formulario);
                
                // Atualizar a janela principal
                mwd.atualizar();
                
                // Grava todos os dados em disco
                Instant agora = Instant.now();
                Calendar calendar = Calendar.getInstance();
                int dia = calendar.get(Calendar.DAY_OF_MONTH);
                int mes = calendar.get(Calendar.MONTH) + 1; 
                int ano = calendar.get(Calendar.YEAR);
                int hora = calendar.get(Calendar.HOUR);
                int minuto = calendar.get(Calendar.MINUTE);
                int segundo = calendar.get(Calendar.SECOND);
                
                fdfWriter fdf = new fdfWriter("formulario_" + dia + "_" + mes + "_" + ano + "_" + hora + "_" + minuto + "_" + segundo);
                
                String[] lines = taPerguntas.getText().split("\n");
                
                for(String line : lines) 
                {
                    // FIXME: é preciso encontrar uma forma de diferenciar as perguntas de cada tipo
                    //fdf.writePergunta(line, fdfFile.tipos_perguntas.LIVRE, segundo, lines);
                }
                
                dispose();
            }
        }
        
        catch (DescricaoObrigatoriaNaoInformadaException e){
            JOptionPane optionPane = new JOptionPane(e.getMessage(), JOptionPane.ERROR_MESSAGE);    
            JDialog dialog = optionPane.createDialog("Error");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_bSalvarActionPerformed

    private void nome_autorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_autorKeyTyped
        
    }//GEN-LAST:event_nome_autorKeyTyped

    private void descricaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descricaoKeyTyped
        
    }//GEN-LAST:event_descricaoKeyTyped

    private void bNovaPerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNovaPerguntaActionPerformed
        QuestionWindow jNovaPergunta = new QuestionWindow(this);
        jNovaPergunta.setVisible(true);
    }//GEN-LAST:event_bNovaPerguntaActionPerformed

    private void bModificarPerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarPerguntaActionPerformed
    
        try{
            Pergunta pergunta = null;

            if(perguntas.getItemCount() == 0)
                throw new PerguntaInexistenteException();
            
            else{
                pergunta = formulario.get(perguntas.getSelectedIndex());

                QuestionWindow modificarPergunta = new QuestionWindow(this, pergunta.getTexto(), null);
                modificarPergunta.setVisible(true);

                formulario.rmv(pergunta);
                atualizar();
            }
        }
        
        catch(PerguntaInexistenteException e){
            JOptionPane optionPane = new JOptionPane(e.getMessage(), JOptionPane.ERROR_MESSAGE);    
            JDialog dialog = optionPane.createDialog("Error");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_bModificarPerguntaActionPerformed

    private void bDeletarPerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeletarPerguntaActionPerformed
        try{
            if(perguntas.getItemCount() == 0)
                throw new PerguntaInexistenteException();
            
            else{
                formulario.rmv(formulario.get(perguntas.getSelectedIndex()));
                atualizar(); 
            }
        }
        
        catch(PerguntaInexistenteException e){
            JOptionPane optionPane = new JOptionPane(e.getMessage(), JOptionPane.ERROR_MESSAGE);    
            JDialog dialog = optionPane.createDialog("Error");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_bDeletarPerguntaActionPerformed

    private void nome_formularioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_formularioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nome_formularioKeyPressed

    private void nome_formularioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_formularioKeyReleased
        
    }//GEN-LAST:event_nome_formularioKeyReleased

    private void nome_autorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_autorKeyReleased
        
    }//GEN-LAST:event_nome_autorKeyReleased

    private void descricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descricaoKeyReleased
        
    }//GEN-LAST:event_descricaoKeyReleased

    private void dataInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataInicioActionPerformed

    private void dataInicioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataInicioKeyReleased
        
    }//GEN-LAST:event_dataInicioKeyReleased

    private void dataTerminoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataTerminoKeyReleased
        
    }//GEN-LAST:event_dataTerminoKeyReleased

    private void dataInicioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataInicioFocusLost
        String texto = dataInicio.getText();
        
        if(!texto.isEmpty())
        {
            // Validar a data fornecida
            String[] data = texto.split("/");
            
            if(data.length != 3)
            {
                JOptionPane.showMessageDialog(mwd, "Data de início inválida", "Erro", JOptionPane.ERROR_MESSAGE);
            } else 
            {
                int dia, mes, ano;
                int ano_atual, dia_atual, mes_atual;
                
                dia = Integer.parseInt(data[0]);
                mes = Integer.parseInt(data[1]);
                ano = Integer.parseInt(data[2]);
                
                dia_atual = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
                mes_atual = Calendar.getInstance().get(Calendar.MONTH) + 1;
                ano_atual = Calendar.getInstance().get(Calendar.YEAR);
                
                System.out.println("Data atual: " + dia_atual + "/" + mes_atual + "/" + ano_atual);
                
                if(ano < ano_atual || (ano == ano_atual && mes < mes_atual) || (ano == ano_atual && dia < dia_atual))
                {
                    JOptionPane.showMessageDialog(mwd, "Data de início inválida: não é possível configurar o formulário para começar a ser respondido no passado", "Erro", JOptionPane.ERROR_MESSAGE);
                    dataInicio.setText("");
                } else {
                    formulario.setDataInicio(texto);
                }
            }
        }
    }//GEN-LAST:event_dataInicioFocusLost

    private void dataTerminoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataTerminoFocusLost
        formulario.setDataInicio(dataTermino.getText());
    }//GEN-LAST:event_dataTerminoFocusLost

    private void bDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDescartarActionPerformed
        mwd.lista.remove(formulario);
        mwd.setVisible(true);
        dispose();
    }//GEN-LAST:event_bDescartarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        mwd.setVisible(true);
        dispose();
    }//GEN-LAST:event_formWindowClosed

    void addTaPerguntas(String str){
        taPerguntas.append("#" + taPerguntas.getLineCount() + " "+ str + '\n');
        perguntas.addItem("Pergunta #" + (perguntas.getItemCount() + 1));
    }
    
    private void atualizar(){
        taPerguntas.setText("");
        perguntas.removeAllItems();
        
        for(int count = 0; count < formulario.perguntasSize(); count++)
            addTaPerguntas(formulario.get(count).getTexto());
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDeletarPergunta;
    private javax.swing.JButton bDescartar;
    private javax.swing.JButton bModificarPergunta;
    private javax.swing.JButton bNovaPergunta;
    private javax.swing.JButton bSair;
    private javax.swing.JButton bSalvar;
    private javax.swing.JFormattedTextField dataInicio;
    private javax.swing.JFormattedTextField dataTermino;
    private javax.swing.JTextArea descricao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nome_autor;
    private javax.swing.JTextField nome_formulario;
    private javax.swing.JComboBox<String> perguntas;
    private javax.swing.JTextArea taPerguntas;
    // End of variables declaration//GEN-END:variables
}
